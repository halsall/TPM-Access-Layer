<?xml version="1.0" encoding="ISO-8859-1" ?>

<!-- A node represent an entity, which can be grouped in a 
     hierarchichal manner. Node is also the root of the xml document -->
<node>

    <!-- Id is an identifier for the node or group of nodes 
         address is the memory address where the register or block is located
         When nodes are grouped, the addresses should be combined in a 
         base (+ offset)* manner -->
    <node id="CPLD" address="0x00000000" >
        <node id="register1" address="0x00000010" />
        <node id="register2" address="0x00000020" />
        <node id="register3" address="0x00000030" />

        <!-- Access permission can be defined to each register or block. These
             include read "r", write "w" and readwrite "rw" -->
        <node id="register4" address="0x00000010" permission="r" />
        <node id="register5" address="0x00000010" permission="w" />
        <node id="register6" address="0x00000010" permission="rw" />
    </node>

    <node id="FPGA1" address="0x20000000" >
        <!-- Access modes can be defined on a memory address:
             single - a single 32-bit register
             block  - a memory area with the specified size
             incremental - a FIFO with the specified size -->
        <node id="register7" address="0x00000010" mode="single" />
        <node id="register8" address="0x00000020" mode="block" size="16" />
        <node id="register9" address="0x00000030" mode="incremental" size="16" />

        <!-- A bit mask can be defined on a register. For eac bit, or set of bits, 
             and ID and a mask must be specified -->
        <node id="register10" address="0x00000040">
            <node id="G0" mask="0x01" />
            <node id="G1" mask="0x02" />
            <node id="G2" mask="0x03" />
            <node if="G3" mask="0x04" />
        </node>

        <!-- Each node can have a descriptor tag associated with it -->
        <node id="register11" address="0x00000050" description="LED control register" />

        <!-- Tags can be used for user-defined behaviour. For example, registers which
             contain sensor values can be tagged as "sensor" -->
        <node id="register12" address="0x00000070" tags="sensor" />
    </node>

    <!-- External module files can be imported into a map -->
    <node id="FPGA2" address="0x30000000" module="file://subsystem_map.xml" />

</node>
